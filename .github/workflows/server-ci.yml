name: Server CI

on:
  pull_request:
    branches: 
      - main
      - staging

jobs:
  build:
    name: Build And Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER_CI }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD_CI }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB_CI }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: List files
        run: ls -a
      - name: Install dependencies
        run: yarn install
      - name: Migrate database
        run: yarn db:refresh:test
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER_CI }}
          POSTGRES_PASSWORD_TEST: ${{ secrets.POSTGRES_PASSWORD_CI }}
          POSTGRES_DB_TEST: ${{ secrets.POSTGRES_DB_CI }}
          POSTGRES_HOST_TEST: ${{ secrets.POSTGRES_HOST_CI }}
          POSTGRES_PORT_TEST: ${{ secrets.POSTGRES_PORT_CI }}
          ADMIN_ID: ${{ secrets.ADMIN_ID }}
          DOCTOR_ID: ${{ secrets.DOCTOR_ID }}
          GUEST_ID: ${{ secrets.GUEST_ID }}
      - name: Run tests
        run: yarn test:coverage
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER_CI }}
          POSTGRES_PASSWORD_TEST: ${{ secrets.POSTGRES_PASSWORD_CI }}
          POSTGRES_DB_TEST: ${{ secrets.POSTGRES_DB_CI }}
          POSTGRES_HOST_TEST: ${{ secrets.POSTGRES_HOST_CI }}
          POSTGRES_PORT_TEST: ${{ secrets.POSTGRES_PORT_CI }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_SECRET_KEY_REFRESH: ${{ secrets.JWT_SECRET_KEY_REFRESH }}
          ADMIN_ID: ${{ secrets.ADMIN_ID }}
          DOCTOR_ID: ${{ secrets.DOCTOR_ID }}
          GUEST_ID: ${{ secrets.GUEST_ID }}
      - name: Static code analysis
        run: npx eslint . --config .eslintrc.json  --ext .ts